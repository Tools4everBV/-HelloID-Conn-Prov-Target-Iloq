{
  "Version": "v1",
  "MappingFields": [
    {
      "Name": "CompanyName",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Field",
          "Value": "\"Person.PrimaryContract.Department.DisplayName\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "ExternalPersonId",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Field",
          "Value": "\"Person.ExternalId\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "LanguageCode",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"NL\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "WorkTitle",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Field",
          "Value": "\"Person.PrimaryContract.Title.Name\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "eMail",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Field",
          "Value": "\"Person.Contact.Business.Email\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "PersonCode",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Field",
          "Value": "\"Person.ExternalId\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "ContactInfo",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "Country",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "FirstName",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Field",
          "Value": "\"Person.Name.GivenName\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "state",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "ExternalCanEdit",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"false\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "LastName",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Complex",
          "Value": "\"\\r\\n// generateDisplayNameOption1.js [https://github.com/Tools4everBV/HelloID-Lib-Prov-HelperFunctions/blob/master/Javascript/Target/DisplayName/Scripts/generateDisplayNameOption1.js]\\r\\n//\\r\\n// Mapping logic to generate the DisplayName according to the following convention.\\r\\n// B\\tJanine van den Boele\\r\\n// BP\\tJanine van den Boele – de Vries\\r\\n// P\\tJanine de Vries\\r\\n// PB   Janine de Vries – van den Boele\\r\\nfunction generateDisplayName() {\\r\\n    let nickName = Person.Name.NickName;\\r\\n    let middleName = Person.Name.FamilyNamePrefix;\\r\\n    let lastName = Person.Name.FamilyName;\\r\\n    let middleNamePartner = Person.Name.FamilyNamePartnerPrefix;\\r\\n    let lastNamePartner = Person.Name.FamilyNamePartner;\\r\\n    let convention = Person.Name.Convention;\\r\\n\\r\\n    let displayName = '';\\r\\n    switch (convention) {\\r\\n        case \\\"BP\\\":\\r\\n            displayName = displayName + nickName + ' ';\\r\\n            if (typeof middleName !== 'undefined' && middleName) { displayName = displayName + middleName + ' ' }\\r\\n            displayName = displayName + lastName;\\r\\n\\r\\n            displayName = displayName + ' - ';\\r\\n            if (typeof middleNamePartner !== 'undefined' && middleNamePartner) { displayName = displayName + middleNamePartner + ' ' }\\r\\n            displayName = displayName + lastNamePartner;\\r\\n            break;\\r\\n        case \\\"PB\\\":\\r\\n            displayName = displayName + nickName + ' ';\\r\\n            if (typeof middleNamePartner !== 'undefined' && middleNamePartner) { displayName = displayName + middleNamePartner + ' ' }\\r\\n            displayName = displayName + lastNamePartner;\\r\\n\\r\\n            displayName = displayName + ' - ';\\r\\n            if (typeof middleName !== 'undefined' && middleName) { displayName = displayName + middleName + ' ' }\\r\\n            displayName = displayName + lastName;\\r\\n            break;\\r\\n        case \\\"P\\\":\\r\\n            displayName = displayName + nickName + ' ';\\r\\n            if (typeof middleNamePartner !== 'undefined' && middleNamePartner) { displayName = displayName + middleNamePartner + ' ' }\\r\\n            displayName = displayName + lastNamePartner;\\r\\n            break;\\r\\n        case \\\"B\\\":\\r\\n        default:\\r\\n            displayName = displayName + nickName + ' ';\\r\\n            if (typeof middleName !== 'undefined' && middleName) { displayName = displayName + middleName + ' ' }\\r\\n            displayName = displayName + lastName;\\r\\n            break;\\r\\n    }\\r\\n    // Trim spaces at start and end\\r\\n    displayName = displayName.trim();\\r\\n\\r\\n    // Shorten string to maxAttributeLength \\r\\n    const maxAttributeLength = 256;\\r\\n    displayName = displayName.substring(0, maxAttributeLength);\\r\\n\\r\\n    return displayName;\\r\\n}\\r\\n\\r\\ngenerateDisplayName();\\r\\n\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "Description",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "Phone2",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "Phone3",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "PostOffice",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "ZipCode",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "Phone1",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Complex",
          "Value": "\"function getValue() {\\n   let Returnvalue = \\\"\\\"\\n   if (Person.Contact.Business.Phone.Mobile != null) {\\n     Returnvalue = Person.Contact.Business.Phone.Mobile\\n   }\\n   return Returnvalue   \\n}\\ngetValue();\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "Address",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update"
          ],
          "MappingMode": "Fixed",
          "Value": "\"\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    },
    {
      "Name": "EmploymentEndDate",
      "Description": "",
      "Type": "Text",
      "MappingActions": [
        {
          "MapForActions": [
            "Create",
            "Update",
            "Disable"
          ],
          "MappingMode": "Complex",
          "Value": "\"function getValue() {\\n    if (Person.PrimaryContract.EndDate) {\\n        let Value =  Person.PrimaryContract.EndDate.toISOString()\\n        return Value;        \\n    }\\n    else{\\n        return \\\"\\\"\\n    }    \\n}\\ngetValue();\"",
          "UsedInNotifications": false,
          "StoreInAccountData": false
        }
      ]
    }
  ],
  "UniqueFieldNames": []
}